stages:
  - build
  - test # only starts when the build completes successfully
  - deploy # only start when the tests are completed successfully

build-job:
  stage: build
  image: docker
  services: 
  # docker in docker (dind)
    - docker:dind
  script:
    # login with user / password
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    #  "-t" to allocate a virtual terminal session within the container, build an image
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    # push an image to container registry (project name / branch)
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

unit-test-job:
  stage: test
  # pull the built image
  image: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  script:
    - poetry run pytest
    - echo "Doing some testing"

lint-test-job:
  stage: test
  image: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  script:
    - poetry run flake8
    - echo "Doing some linting"